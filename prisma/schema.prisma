// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id        String     @id
  name      String?
  username  String?
  email     String     @unique
  password  String?
  posts     Post[]
  comments  Comment[]
  likes     PostLike[]
  followers Follower[] @relation("FollowedBy")
  following Follower[] @relation("Follows")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id       String     @id @default(cuid())
  title    String
  content  String
  authorId String
  author   User       @relation(fields: [authorId], references: [id])
  comments Comment[]
  likes    PostLike[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id       String @id @default(cuid())
  content  String
  postId   String
  post     Post   @relation(fields: [postId], references: [id])
  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PostLike {
  id     String @id @default(cuid())
  postId String
  post   Post   @relation(fields: [postId], references: [id])
  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}

model Follower {
  id          String @id @default(cuid())
  followerId  String
  followingId String
  follower    User   @relation("Follows", fields: [followerId], references: [id])
  following   User   @relation("FollowedBy", fields: [followingId], references: [id])

  createdAt DateTime @default(now())

  @@unique([followerId, followingId])
}
